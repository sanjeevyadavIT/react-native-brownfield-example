diff --git a/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/src/main/kotlin/com/facebook/react/ReactPlugin.kt b/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/src/main/kotlin/com/facebook/react/ReactPlugin.kt
index 538d871..c2dc8f0 100644
--- a/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/src/main/kotlin/com/facebook/react/ReactPlugin.kt
+++ b/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/src/main/kotlin/com/facebook/react/ReactPlugin.kt
@@ -138,8 +138,8 @@ class ReactPlugin : Plugin<Project> {
       isLibrary: Boolean
   ) {
     // First, we set up the output dir for the codegen.
-    val generatedSrcDir: Provider<Directory> =
-        project.layout.buildDirectory.dir("generated/source/codegen")
+      val generatedSrcDir: Provider<Directory> =
+          project.layout.buildDirectory.dir("../../feature/react/build/generated/source/codegen")
 
     // We specify the default value (convention) for jsRootDir.
     // It's the root folder for apps (so ../../ from the Gradle project)
diff --git a/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/src/main/kotlin/com/facebook/react/tasks/GeneratePackageListTask.kt b/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/src/main/kotlin/com/facebook/react/tasks/GeneratePackageListTask.kt
index 36cc66c..523bda6 100644
--- a/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/src/main/kotlin/com/facebook/react/tasks/GeneratePackageListTask.kt
+++ b/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/src/main/kotlin/com/facebook/react/tasks/GeneratePackageListTask.kt
@@ -43,15 +43,14 @@ abstract class GeneratePackageListTask : DefaultTask() {
 
     val packageName =
         model.project?.android?.packageName
-            ?: error(
-                "RNGP - Autolinking: Could not find project.android.packageName in react-native config output! Could not autolink packages without this field.")
+            ?: "com.betatech.reactnativebrownfiled"
 
     val androidPackages = filterAndroidPackages(model)
     val packageImports = composePackageImports(packageName, androidPackages)
     val packageClassInstance = composePackageInstance(packageName, androidPackages)
     val generatedFileContents = composeFileContent(packageImports, packageClassInstance)
 
-    val outputDir = generatedOutputDirectory.get().asFile
+    val outputDir = File(project.rootDir, "feature/react/build/generated/autolinking/src/main/java/")
     outputDir.mkdirs()
     File(outputDir, GENERATED_FILENAME).apply {
       parentFile.mkdirs()
